1. SinglyLinkedList
    - Piece of data -> value
    - Reference to next node -> next 

2. Pushing Method Pseudocode (Adding new Node in the end)
    - This function should accept a value
    - Create a new node using the value passed to the function
    - If there is no head property on the list, set the head and tail to be the newly created Node
    - otherwise set the next property on the tail to be the new node and set the tail property on the list to be the newly created Node

3. Popping Method Pseudocode (Removing last Node)
    - If there is no nodes in the list, return undefined
    - loop through the list until you reach the tail
    - Set the next property of the 2nd to last node to be null 
    - Set the tail to be the 2nd to last node 
    - Decrement the lenfth od list by 1
    - Return the value of node removed

4. Shifting Method Pseudocode (Removing first Node)
    - if there are no nodes, return undefined
    - Store the current head property in variable
    - Set the head property to be the current head's next property
    - Decrement the length by 1
    - Return the value of the node removed

5. Unshifting Method Pseudocode (adding newnode in the first)
    - this function should accept a value
    - create a new node using the value passed to the function
    - if there is no head property on the list, set the head and tail to be the newly created node
    - otherwise set the newly create node's next property to be the current head property on the list
    - Set the head property on the list to be that newly created node
    - Increment the length of the list by 1
    - Return the linked list